

import gdb

# this was used to find which libcpp got entries are called during string allocation
# yes this was generated by chatgpt :P

# Define a new GDB command
class SetBreakpointAtAddressCommand(gdb.Command):
    def __init__(self):
        super(SetBreakpointAtAddressCommand, self).__init__("set_breakpoint_at_address", gdb.COMMAND_USER)

    def invoke(self, arg, from_tty):
        # Split the argument to get the address
        address = int(gdb.parse_and_eval(arg))
        
        # Number of entries
        N = 53
        for i in range(0, N*8, 8):
            # Examine memory at the given address
            result = gdb.execute("x/gx " + str(address+i), to_string=True)

            # Extract the value at the address
            value_str = result.split(":")[1].split()[0]
            value = int(value_str, 16)

            # Set a breakpoint at the value
            gdb.execute("break *" + str(value))

# Register the new command
SetBreakpointAtAddressCommand()
